<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="3" ignored="1" total="20" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="测试套件" duration-ms="37" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
    <groups>
      <group name="涓�">
        <method signature="GroupsTest.testCase6()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase6" class="test.sample.GroupsTest"/>
      </group> <!-- 涓� -->
      <group name="浣�">
        <method signature="GroupsTest.testCase7()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase7" class="test.sample.GroupsTest"/>
      </group> <!-- 浣� -->
      <group name="楂�">
        <method signature="GroupsTest.testCase4()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase4" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase5()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase5" class="test.sample.GroupsTest"/>
      </group> <!-- 楂� -->
      <group name="鍔熻兘娴嬭瘯">
        <method signature="GroupsTest.testCase4()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase4" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase5()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase5" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase6()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase6" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase7()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase7" class="test.sample.GroupsTest"/>
      </group> <!-- 鍔熻兘娴嬭瘯 -->
      <group name="functest">
        <method signature="DependGroupsTest.testAdd1()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5]" name="testAdd1" class="test.sample.DependGroupsTest"/>
        <method signature="DependGroupsTest.testAdd2()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5]" name="testAdd2" class="test.sample.DependGroupsTest"/>
      </group> <!-- functest -->
      <group name="寮傚父">
        <method signature="GroupsTest.testCase7()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase7" class="test.sample.GroupsTest"/>
      </group> <!-- 寮傚父 -->
      <group name="姝ｅ父">
        <method signature="GroupsTest.testCase4()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase4" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase5()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase5" class="test.sample.GroupsTest"/>
        <method signature="GroupsTest.testCase6()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase6" class="test.sample.GroupsTest"/>
      </group> <!-- 姝ｅ父 -->
    </groups>
    <test name="简单测试" duration-ms="37" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
      <class name="test.sample.FixtureTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="testCase1" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="testCase2" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.sample.FixtureTest@1324409e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.sample.FixtureTest -->
      <class name="test.sample.GroupsTest">
        <test-method status="PASS" signature="testCase4()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase4" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase4 -->
        <test-method status="PASS" signature="testCase5()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase5" duration-ms="1" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase5 -->
        <test-method status="PASS" signature="testCase6()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase6" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase6 -->
        <test-method status="PASS" signature="testCase7()[pri:0, instance:test.sample.GroupsTest@2c6a3f77]" name="testCase7" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at test.sample.GroupsTest.testCase7(GroupsTest.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase7 -->
      </class> <!-- test.sample.GroupsTest -->
      <class name="test.sample.CaseRunTest">
        <test-method status="PASS" signature="testCase0()[pri:0, instance:test.sample.CaseRunTest@4e04a765]" name="testCase0" duration-ms="7" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase0 -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:test.sample.CaseRunTest@4e04a765]" name="testCase1" duration-ms="1" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:test.sample.CaseRunTest@4e04a765]" name="testCase2" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
      </class> <!-- test.sample.CaseRunTest -->
      <class name="test.sample.FirstTest">
        <test-method status="PASS" signature="testCase()[pri:0, instance:test.sample.FirstTest@180bc464]" name="testCase" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
      </class> <!-- test.sample.FirstTest -->
      <class name="test.sample.DataProviderTest">
        <test-method status="PASS" signature="testAdd2(int, int, int)[pri:0, instance:test.sample.DataProviderTest@783e6358]" name="testAdd2" duration-ms="0" started-at="2021-01-06T14:38:28Z" data-provider="add" finished-at="2021-01-06T14:38:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
        <test-method status="PASS" signature="testAdd2(int, int, int)[pri:0, instance:test.sample.DataProviderTest@783e6358]" name="testAdd2" duration-ms="0" started-at="2021-01-06T14:38:28Z" data-provider="add" finished-at="2021-01-06T14:38:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
        <test-method status="FAIL" signature="testAdd2(int, int, int)[pri:0, instance:test.sample.DataProviderTest@783e6358]" name="testAdd2" duration-ms="0" started-at="2021-01-06T14:38:28Z" data-provider="add" finished-at="2021-01-06T14:38:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<6> but was:<7>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<6> but was:<7>
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:364)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:80)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:245)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:252)
at test.sample.DataProviderTest.testAdd2(DataProviderTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
      </class> <!-- test.sample.DataProviderTest -->
      <class name="test.sample.DependentMethodsTest">
        <test-method status="FAIL" signature="testAdd1()[pri:0, instance:test.sample.DependentMethodsTest@17550481]" name="testAdd1" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.RuntimeException but got java.lang.AssertionError: expected:<3> but was:<4>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.RuntimeException but got java.lang.AssertionError: expected:<3> but was:<4>
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.AssertionError: expected:<3> but was:<4>
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:364)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:80)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:245)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:252)
at test.sample.DependentMethodsTest.testAdd1(DependentMethodsTest.java:11)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
... 14 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd1 -->
        <test-method status="SKIP" signature="testAdd2()[pri:0, instance:test.sample.DependentMethodsTest@17550481]" name="testAdd2" duration-ms="0" started-at="2021-01-06T14:38:28Z" depends-on-methods="test.sample.DependentMethodsTest.testAdd1" finished-at="2021-01-06T14:38:28Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependentMethodsTest.testAdd2()[pri:0, instance:test.sample.DependentMethodsTest@17550481] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependentMethodsTest.testAdd2()[pri:0, instance:test.sample.DependentMethodsTest@17550481] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
      </class> <!-- test.sample.DependentMethodsTest -->
      <class name="test.sample.SecondTest">
        <test-method status="PASS" signature="TestCase3()[pri:0, instance:test.sample.SecondTest@246ae04d]" name="TestCase3" duration-ms="1" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase3 -->
      </class> <!-- test.sample.SecondTest -->
      <class name="test.sample.DependGroupsTest">
        <test-method status="FAIL" signature="testAdd1()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5]" name="testAdd1" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<5> but was:<4>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<5> but was:<4>
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:364)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:80)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:245)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:252)
at test.sample.DependGroupsTest.testAdd1(DependGroupsTest.java:11)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd1 -->
        <test-method status="PASS" signature="testAdd2()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5]" name="testAdd2" duration-ms="0" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
        <test-method status="SKIP" signature="testAdd3()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5]" name="testAdd3" duration-ms="0" depends-on-groups="functest" started-at="2021-01-06T14:38:28Z" finished-at="2021-01-06T14:38:28Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependGroupsTest.testAdd3()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5] depends on not successfully finished methods in group "functest"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependGroupsTest.testAdd3()[pri:0, instance:test.sample.DependGroupsTest@735f7ae5] depends on not successfully finished methods in group "functest"
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd3 -->
      </class> <!-- test.sample.DependGroupsTest -->
    </test> <!-- 简单测试 -->
  </suite> <!-- 测试套件 -->
</testng-results>
